@page "/chess"
@using UltraChess.Blazor.Models

<h3>Chess</h3>

<div class="grid-container">
    @{
        foreach (var square in ChessBoard.Squares)
        {
            <div id="@($"{square.Id}")" class="grid-item fill @(square.IsHighlighted ? "highlight" : square.IsLight ? "light" : "dark")" ondragover="event.preventDefault();" @ondrop="@(()=> Drop(square.Id))">

                <div class="rank-text">@(square.Rank == 'a' ? square.File.ToString() : "")</div>
                <div class="file-text">@(square.File == '1' ? square.Rank.ToString() : "")</div>
                @{
                    if (square.PieceId != 0)
                    {
                        <img id="@($"{square.Rank}.{square.File}-image")" src="@(ChessBoard.Pieces[square.PieceId].Image)" @ondrag="@(()=> StartDrag(square.Id))" ondrop="event.preventDefault();" />
                    }
                }
            </div>
        }
    }
</div>

@code {
    private ChessBoard ChessBoard = new ChessBoard("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1");
    private int FromSquareId;

    void StartDrag(int fromSquareId)
    {
        FromSquareId = fromSquareId;
        var fromSquare = ChessBoard.Squares[FromSquareId];
        ChessBoard.HighlightLegalMoves(fromSquareId);
    }

    void Drop(int toSquareId)
    {
        var fromSquare = ChessBoard.Squares[FromSquareId];
        ChessBoard.Move(FromSquareId, toSquareId);
    }
}
